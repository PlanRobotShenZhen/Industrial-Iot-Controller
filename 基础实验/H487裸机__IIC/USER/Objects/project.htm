<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Thu Sep 04 11:08:38 2025
<BR><P>
<H3>Maximum Stack Usage =       1160 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Read_TempHumi_I2C &rArr; USART_Print &rArr; USART_SendStr
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[39]">ADC3_ADC4_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[22]">ATIM1_BRK_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[25]">ATIM1_CC_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[24]">ATIM1_TRG_COM_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[23]">ATIM1_UP_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[35]">ATIM2_BRK_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[38]">ATIM2_CC_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[37]">ATIM2_TRG_COM_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[36]">ATIM2_UP_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[62]">ATIM3_BRK_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[65]">ATIM3_CC_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[64]">ATIM3_TRG_COM_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[63]">ATIM3_UP_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[40]">BTIM1_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[41]">BTIM2_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from n32h47x_48x_it.o(i.BusFault_Handler) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[6a]">Cordic_IRQ_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[71]">DAC1_2_3_4_Underflow_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[72]">DAC5_6_7_8_Underflow_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[55]">DMA1_Channel8_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[42]">DMA2_Channel1_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[43]">DMA2_Channel2_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[44]">DMA2_Channel3_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[45]">DMA2_Channel4_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[46]">DMA2_Channel5_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[4d]">DMA2_Channel6_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[4e]">DMA2_Channel7_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[56]">DMA2_Channel8_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[57]">DVP_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from n32h47x_48x_it.o(i.DebugMon_Handler) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[5f]">ETH_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[60]">ETH_WKUP_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[1f]">FDCAN1_INT0_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[20]">FDCAN1_INT1_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[48]">FDCAN2_INT0_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[49]">FDCAN2_INT1_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[4a]">FDCAN3_INT0_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[4b]">FDCAN3_INT1_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[74]">FEMC_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[69]">FMAC_IRQ_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[70]">GTIM10_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[26]">GTIM1_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[27]">GTIM2_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[28]">GTIM3_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[3c]">GTIM4_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[61]">GTIM5_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[66]">GTIM6_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[6d]">GTIM7_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[6e]">GTIM8_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[6f]">GTIM9_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from n32h47x_48x_it.o(i.HardFault_Handler) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[50]">I2C3_ER_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[4f]">I2C3_EV_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[52]">I2C4_ER_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[51]">I2C4_EV_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[67]">LPTIM1_WKUP_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[68]">LPTIM2_WKUP_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from n32h47x_48x_it.o(i.MemManage_Handler) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from n32h47x_48x_it.o(i.NMI_Handler) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[33]">RTCAlarm_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[c]">RTC_TAMPER_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[58]">SAC_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[59]">SMPU_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[2e]">SPI2_I2S2_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[3d]">SPI3_I2S3_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[5e]">SPI4_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[6b]">SPI5_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[6c]">SPI6_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[47]">SRAM_ERR_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from n32h47x_48x_it.o(i.SVC_Handler) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from n32h47x_48x_it.o(i.SysTick_Handler) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[76]">SystemInit</a> from system_n32h47x_48x.o(i.SystemInit) referenced from startup_n32h487.o(.text)
 <LI><a href="#[3f]">UART5_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[53]">UART6_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[54]">UART7_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[5d]">UART8_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[3a]">UCDR_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[3e]">USART4_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[1d]">USB_FS_HP_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[1e]">USB_FS_LP_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[34]">USB_FS_WKUP_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[5b]">USB_HS_EPx_IN_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[5a]">USB_HS_EPx_OUT_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[73]">USB_HS_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[5c]">USB_HS_WKUP_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from n32h47x_48x_it.o(i.UsageFault_Handler) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[4c]">XSPI_IRQHandler</a> from startup_n32h487.o(.text) referenced from startup_n32h487.o(RESET)
 <LI><a href="#[77]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_n32h487.o(.text)
 <LI><a href="#[79]">_snputc</a> from printfa.o(i._snputc) referenced from printfa.o(i.__0vsnprintf)
 <LI><a href="#[78]">fputc</a> from usart.o(i.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[75]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[77]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(.text)
</UL>
<P><STRONG><a name="[c7]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[7a]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[8b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[c8]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[c9]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[ca]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[cb]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[cc]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC3_ADC4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>ATIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>ATIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>ATIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>ATIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>ATIM2_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>ATIM2_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>ATIM2_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>ATIM2_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>ATIM3_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>ATIM3_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>ATIM3_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>ATIM3_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>BTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>BTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>Cordic_IRQ_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>DAC1_2_3_4_Underflow_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>DAC5_6_7_8_Underflow_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>DMA1_Channel8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>DMA2_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>DMA2_Channel8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>DVP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>FDCAN1_INT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>FDCAN1_INT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>FDCAN2_INT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>FDCAN2_INT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>FDCAN3_INT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>FDCAN3_INT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>FEMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>FMAC_IRQ_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>GTIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>GTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>GTIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>GTIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>GTIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>GTIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>GTIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>GTIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>GTIM8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>GTIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>LPTIM1_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>LPTIM2_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>RTC_TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>SAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>SMPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_I2S2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI3_I2S3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>SRAM_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>UART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>UCDR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>USART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_FS_HP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_FS_LP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USB_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>USB_HS_EPx_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>USB_HS_EPx_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>USB_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>USB_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>XSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_n32h487.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreqValue
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[7e]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[cd]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[ce]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[cf]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_INIT
</UL>

<P><STRONG><a name="[d0]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[d1]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[d2]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[91]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT
</UL>

<P><STRONG><a name="[d3]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[81]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[b9]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Print
</UL>

<P><STRONG><a name="[c6]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d4]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[c5]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[d5]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[83]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[82]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[84]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[86]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[87]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[89]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[8a]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[c2]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[7b]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[d6]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[85]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[d7]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32h47x_48x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[9c]"></a>CRC8_Caculate</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, main.o(i.CRC8_Caculate))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CRC8_Caculate
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_TempHumi_I2C
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32h47x_48x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[8c]"></a>GPIO_Configuration</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, usart.o(i.GPIO_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GPIO_Configuration &rArr; GPIO_InitPeripheral
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitStruct
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitPeripheral
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_init
</UL>

<P><STRONG><a name="[8f]"></a>GPIO_INIT</STRONG> (Thumb, 68 bytes, Stack size 72 bytes, init.o(i.GPIO_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = GPIO_INIT &rArr; GPIO_InitPeripheral
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitStruct
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitPeripheral
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_INIT
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_INIT
</UL>

<P><STRONG><a name="[8e]"></a>GPIO_InitPeripheral</STRONG> (Thumb, 160 bytes, Stack size 20 bytes, n32h47x_48x_gpio.o(i.GPIO_InitPeripheral))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_InitPeripheral
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OutputMode
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_InputMode
</UL>

<P><STRONG><a name="[8d]"></a>GPIO_InitStruct</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, n32h47x_48x_gpio.o(i.GPIO_InitStruct))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT
</UL>

<P><STRONG><a name="[a5]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32h47x_48x_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_R
</UL>

<P><STRONG><a name="[9e]"></a>GPIO_WriteBits</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, n32h47x_48x_gpio.o(i.GPIO_WriteBits))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_INIT
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_L
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_H
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_L
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_H
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32h47x_48x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32h47x_48x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32h47x_48x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[93]"></a>RCC_Configuration</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usart.o(i.RCC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_Configuration
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB2PeriphClk
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAHB1PeriphClk
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_init
</UL>

<P><STRONG><a name="[94]"></a>RCC_EnableAHB1PeriphClk</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32h47x_48x_rcc.o(i.RCC_EnableAHB1PeriphClk))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_INIT
</UL>

<P><STRONG><a name="[98]"></a>RCC_EnableAHBPeriphClk</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32h47x_48x_rcc.o(i.RCC_EnableAHBPeriphClk))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_INIT
</UL>

<P><STRONG><a name="[97]"></a>RCC_EnableAPB1PeriphClk</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32h47x_48x_rcc.o(i.RCC_EnableAPB1PeriphClk))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_INIT
</UL>

<P><STRONG><a name="[95]"></a>RCC_EnableAPB2PeriphClk</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32h47x_48x_rcc.o(i.RCC_EnableAPB2PeriphClk))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_INIT
</UL>

<P><STRONG><a name="[96]"></a>RCC_GetClocksFreqValue</STRONG> (Thumb, 488 bytes, Stack size 104 bytes, n32h47x_48x_rcc.o(i.RCC_GetClocksFreqValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = RCC_GetClocksFreqValue &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[90]"></a>RCC_INIT</STRONG> (Thumb, 614 bytes, Stack size 8 bytes, init.o(i.RCC_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_INIT
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB2PeriphClk
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAPB1PeriphClk
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAHBPeriphClk
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_EnableAHB1PeriphClk
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_INIT
</UL>

<P><STRONG><a name="[99]"></a>Read_TempHumi_I2C</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, main.o(i.Read_TempHumi_I2C))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112<LI>Call Chain = Read_TempHumi_I2C &rArr; USART_Print &rArr; USART_SendStr
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Print
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_ReadData
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC8_Caculate
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9d]"></a>SCL_H</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, i2c.o(i.SCL_H))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCL_H
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBits
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_WaitACK
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_Stop
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_Start
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_SendNACK
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_SendByte
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_SendACK
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_ReceiveByte
</UL>

<P><STRONG><a name="[9f]"></a>SCL_L</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, i2c.o(i.SCL_L))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCL_L
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBits
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_WaitACK
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_Start
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_SendNACK
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_SendByte
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_SendACK
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_ReceiveByte
</UL>

<P><STRONG><a name="[a0]"></a>SDA_H</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, i2c.o(i.SDA_H))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDA_H
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBits
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_Stop
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_Start
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_SendNACK
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_SendByte
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_SendACK
</UL>

<P><STRONG><a name="[a1]"></a>SDA_InputMode</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, i2c.o(i.SDA_InputMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SDA_InputMode &rArr; GPIO_InitPeripheral
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitPeripheral
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_ReceiveByte
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_R
</UL>

<P><STRONG><a name="[a2]"></a>SDA_L</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, i2c.o(i.SDA_L))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDA_L
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBits
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_Stop
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_Start
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_SendByte
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_SendACK
</UL>

<P><STRONG><a name="[a3]"></a>SDA_OutputMode</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, i2c.o(i.SDA_OutputMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SDA_OutputMode &rArr; GPIO_InitPeripheral
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InitPeripheral
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_R
</UL>

<P><STRONG><a name="[a4]"></a>SDA_R</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, i2c.o(i.SDA_R))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SDA_R &rArr; SDA_OutputMode &rArr; GPIO_InitPeripheral
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_OutputMode
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_InputMode
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_WaitACK
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_ReceiveByte
</UL>

<P><STRONG><a name="[a6]"></a>SI2C1_Configuration</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, i2c.o(i.SI2C1_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = SI2C1_Configuration &rArr; SI2C_INIT &rArr; GPIO_INIT &rArr; GPIO_InitPeripheral
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_INIT
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>SI2C_INIT</STRONG> (Thumb, 130 bytes, Stack size 96 bytes, init.o(i.SI2C_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = SI2C_INIT &rArr; GPIO_INIT &rArr; GPIO_InitPeripheral
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBits
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_INIT
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C1_Configuration
</UL>

<P><STRONG><a name="[9a]"></a>SI2C_ReadData</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, i2c.o(i.SI2C_ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SI2C_ReadData &rArr; SI2C_WaitACK &rArr; SDA_R &rArr; SDA_OutputMode &rArr; GPIO_InitPeripheral
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_delay
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_WaitACK
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_Stop
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_Start
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_SendNACK
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_SendByte
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_SendACK
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_ReceiveByte
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_TempHumi_I2C
</UL>

<P><STRONG><a name="[ad]"></a>SI2C_ReceiveByte</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, i2c.o(i.SI2C_ReceiveByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = SI2C_ReceiveByte &rArr; SDA_R &rArr; SDA_OutputMode &rArr; GPIO_InitPeripheral
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_delay
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_R
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_InputMode
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_L
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_H
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_ReadData
</UL>

<P><STRONG><a name="[ae]"></a>SI2C_SendACK</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, i2c.o(i.SI2C_SendACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SI2C_SendACK &rArr; SI2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_delay
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_L
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_H
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_L
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_H
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_ReadData
</UL>

<P><STRONG><a name="[a9]"></a>SI2C_SendByte</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, i2c.o(i.SI2C_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SI2C_SendByte &rArr; SI2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_delay
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_L
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_H
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_L
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_H
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_ReadData
</UL>

<P><STRONG><a name="[af]"></a>SI2C_SendNACK</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, i2c.o(i.SI2C_SendNACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SI2C_SendNACK &rArr; SI2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_delay
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_H
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_L
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_H
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_ReadData
</UL>

<P><STRONG><a name="[a8]"></a>SI2C_Start</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, i2c.o(i.SI2C_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SI2C_Start &rArr; SI2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_delay
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_L
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_H
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_L
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_H
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_ReadData
</UL>

<P><STRONG><a name="[ab]"></a>SI2C_Stop</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, i2c.o(i.SI2C_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SI2C_Stop &rArr; SI2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_delay
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_L
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_H
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_H
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_ReadData
</UL>

<P><STRONG><a name="[aa]"></a>SI2C_WaitACK</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, i2c.o(i.SI2C_WaitACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = SI2C_WaitACK &rArr; SDA_R &rArr; SDA_OutputMode &rArr; GPIO_InitPeripheral
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_delay
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDA_R
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_L
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCL_H
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_ReadData
</UL>

<P><STRONG><a name="[ac]"></a>SI2C_delay</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, i2c.o(i.SI2C_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SI2C_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_loop_us
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_ReadData
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_WaitACK
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_Stop
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_Start
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_SendNACK
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_SendByte
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_SendACK
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_ReceiveByte
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32h47x_48x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, n32h47x_48x_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>SystemInit</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, system_n32h47x_48x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStartupVolt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(.text)
</UL>
<P><STRONG><a name="[b3]"></a>USART1_init</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, usart.o(i.USART1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = USART1_init &rArr; USART_Init &rArr; RCC_GetClocksFreqValue &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Configuration
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_StructInit
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Enable
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bd]"></a>USART_ClrFlag</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, n32h47x_48x_usart.o(i.USART_ClrFlag))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendStr
</UL>

<P><STRONG><a name="[b6]"></a>USART_Enable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, n32h47x_48x_usart.o(i.USART_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_init
</UL>

<P><STRONG><a name="[bb]"></a>USART_GetFlagStatus</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, n32h47x_48x_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendStr
</UL>

<P><STRONG><a name="[b5]"></a>USART_Init</STRONG> (Thumb, 228 bytes, Stack size 64 bytes, n32h47x_48x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreqValue &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreqValue
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_init
</UL>

<P><STRONG><a name="[9b]"></a>USART_Print</STRONG> (Thumb, 64 bytes, Stack size 1056 bytes, usart.o(i.USART_Print))
<BR><BR>[Stack]<UL><LI>Max Depth = 1080<LI>Call Chain = USART_Print &rArr; USART_SendStr
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendStr
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_TempHumi_I2C
</UL>

<P><STRONG><a name="[bc]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, n32h47x_48x_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendStr
</UL>

<P><STRONG><a name="[ba]"></a>USART_SendStr</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, usart.o(i.USART_SendStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART_SendStr
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClrFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Print
</UL>

<P><STRONG><a name="[b4]"></a>USART_StructInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, n32h47x_48x_usart.o(i.USART_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_init
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, n32h47x_48x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_n32h487.o(RESET)
</UL>
<P><STRONG><a name="[be]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[d8]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[b7]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d9]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[da]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[c0]"></a>__0vsnprintf</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[db]"></a>__1vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[dc]"></a>__2vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[dd]"></a>__c89vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[b8]"></a>vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Print
</UL>

<P><STRONG><a name="[de]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[df]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[e0]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[b0]"></a>delay_loop_us</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, i2c.o(i.delay_loop_us))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C_delay
</UL>

<P><STRONG><a name="[78]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, usart.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[75]"></a>main</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160<LI>Call Chain = main &rArr; Read_TempHumi_I2C &rArr; USART_Print &rArr; USART_SendStr
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Print
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SI2C1_Configuration
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_TempHumi_I2C
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[b2]"></a>SetStartupVolt</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, system_n32h47x_48x.o(i.SetStartupVolt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetStartupVolt
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[b1]"></a>SetSysClock</STRONG> (Thumb, 182 bytes, Stack size 20 bytes, system_n32h47x_48x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[c1]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[bf]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsnprintf
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[c4]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[c3]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[79]"></a>_snputc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printfa.o(i._snputc))
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0vsnprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
